# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-08-12 07:14
from __future__ import unicode_literals

import MHacks.models
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion

import users


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=60)),
                ('info', models.TextField(default='')),
                ('broadcast_at', models.DateTimeField()),
                ('category', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(63)])),
                ('approved', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('school', models.CharField(default='', max_length=255)),
                ('is_high_school', models.BooleanField()),
                ('major', models.CharField(choices=[(b'Other', b'Other'), (b'Accounting', b'Accounting'), (b'Advertising', b'Advertising'), (b'Aeronautics & Aviation Technology', b'Aeronautics & Aviation Technology'), (b'Aerospace Engineering', b'Aerospace Engineering'), (b'Agricultural & Environmental Engineering', b'Agricultural & Environmental Engineering'), (b'Agricultural Studies', b'Agricultural Studies'), (b'Animal Sciences', b'Animal Sciences'), (b'Anthropology & Archaeology', b'Anthropology & Archaeology'), (b'Architectural/Structural Engineering', b'Architectural/Structural Engineering'), (b'Architecture & Urban Planning', b'Architecture & Urban Planning'), (b'Art History', b'Art History'), (b'Astronomy & Astrophysics', b'Astronomy & Astrophysics'), (b'Atmospheric Sciences & Meteorology', b'Atmospheric Sciences & Meteorology'), (b'Behavioral Sciences', b'Behavioral Sciences'), (b'Biochemistry & Biophysics', b'Biochemistry & Biophysics'), (b'Biological Engineering', b'Biological Engineering'), (b'Biology', b'Biology'), (b'Biomedical Engineering', b'Biomedical Engineering'), (b'Botany & Plant Sciences', b'Botany & Plant Sciences'), (b'Business Administration', b'Business Administration'), (b'Cell & Molecular Biology', b'Cell & Molecular Biology'), (b'Chemical Engineering', b'Chemical Engineering'), (b'Chemistry', b'Chemistry'), (b'Civil Engineering', b'Civil Engineering'), (b'Communications', b'Communications'), (b'Computer Hardware Engineering', b'Computer Hardware Engineering'), (b'Computer Software Engineering', b'Computer Software Engineering'), (b'Computer Science', b'Computer Science'), (b'Construction Engineering', b'Construction Engineering'), (b'Dentistry', b'Dentistry'), (b'Design & Applied Arts', b'Design & Applied Arts'), (b'Earth Sciences', b'Earth Sciences'), (b'Economics', b'Economics'), (b'Education', b'Education'), (b'Electrical Engineering', b'Electrical Engineering'), (b'Engineering (General or Undecided)', b'Engineering (General or Undecided)'), (b'Engineering Drafting & Design (CAD/CADD)', b'Engineering Drafting & Design (CAD/CADD)'), (b'Engineering Sciences & Mechanics', b'Engineering Sciences & Mechanics'), (b'English', b'English'), (b'Entrepreneurship', b'Entrepreneurship'), (b'Environmental Sciences', b'Environmental Sciences'), (b'Film, Video, & Photography', b'Film, Video, & Photography'), (b'Finance', b'Finance'), (b'Fine Arts', b'Fine Arts'), (b'Foreign Affairs', b'Foreign Affairs'), (b'Foreign Languages & Linguistics', b'Foreign Languages & Linguistics'), (b'Gender Studies', b'Gender Studies'), (b'History', b'History'), (b'Hospitality/Tourism', b'Hospitality/Tourism'), (b'Human Resources', b'Human Resources'), (b'Industrial Operations Engineering', b'Industrial Operations Engineering'), (b'Informatics & Data Science', b'Informatics & Data Science'), (b'Information Technology', b'Information Technology'), (b'Journalism', b'Journalism'), (b'Kinesiology/Movement Science', b'Kinesiology/Movement Science'), (b'Law/Pre-Law', b'Law/Pre-Law'), (b'Management Sciences & Information Systems', b'Management Sciences & Information Systems'), (b'Manufacturing Engineering', b'Manufacturing Engineering'), (b'Marketing', b'Marketing'), (b'Material Science Engineering', b'Material Science Engineering'), (b'Mathematics', b'Mathematics'), (b'Mechanical Engineering', b'Mechanical Engineering'), (b'Mineral and Petroleum Engineering', b'Mineral and Petroleum Engineering'), (b'Music', b'Music'), (b'Neuroscience', b'Neuroscience'), (b'Nuclear Engineering & Radiological Sciences', b'Nuclear Engineering & Radiological Sciences'), (b'Nursing', b'Nursing'), (b'Philosophy', b'Philosophy'), (b'Physics', b'Physics'), (b'Political Science', b'Political Science'), (b'Pre-Medicine Studies', b'Pre-Medicine Studies'), (b'Psychology', b'Psychology'), (b'Religious Studies', b'Religious Studies'), (b'Robotics & Automation Engineering', b'Robotics & Automation Engineering'), (b'Sociology', b'Sociology'), (b'Statistics', b'Statistics'), (b'Systems Engineering', b'Systems Engineering'), (b'Undecided', b'Undecided')], default='', max_length=255)),
                ('grad_date', models.DateField()),
                ('birthday', models.DateField()),
                ('gender', models.CharField(choices=[(b'none', b'Prefer not to answer'), (b'm', b'Male'), (b'f', b'Female'), (b'non-binary', b'Non Binary')], default='none', max_length=16)),
                ('race', models.CharField(choices=[(b'none', b'Prefer not to answer'), (b'white', b'White'), (b'black', b'Black'), (b'native', b'American Indian or Alaskan Native'), (b'asian', b'Asian or Pacific Islander'), (b'hispanic', b'Hispanic')], default='none', max_length=16)),
                ('github', models.URLField()),
                ('devpost', models.URLField()),
                ('personal_website', models.URLField()),
                ('resume', models.FileField(max_length=10485760, upload_to='resumes/')),
                ('num_hackathons', models.IntegerField(default=0)),
                ('cortex', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[(b'ios', b'iOS'), (b'android', b'Android'), (b'web_dev', b'Web Dev'), (b'vr', b'Virtual/Augmented Reality'), (b'game_dev', b'Game Development'), (b'hardware', b'Hardware')], default='', max_length=16), size=6)),
                ('passionate', models.TextField()),
                ('coolest_thing', models.TextField()),
                ('other_info', models.TextField()),
                ('needs_reimbursement', models.BooleanField(default=False)),
                ('can_pay', models.FloatField(default=0)),
                ('from_city', models.CharField(default='', max_length=255)),
                ('from_state', models.CharField(choices=[(b'Other', b'Other'), (b'AL', b'AL'), (b'AK', b'AK'), (b'AZ', b'AZ'), (b'AR', b'AR'), (b'CA', b'CA'), (b'CO', b'CO'), (b'CT', b'CT'), (b'DE', b'DE'), (b'DC', b'DC'), (b'FL', b'FL'), (b'GA', b'GA'), (b'HI', b'HI'), (b'ID', b'ID'), (b'IL', b'IL'), (b'IN', b'IN'), (b'IA', b'IA'), (b'KS', b'KS'), (b'KY', b'KY'), (b'LA', b'LA'), (b'ME', b'ME'), (b'MT', b'MT'), (b'NE', b'NE'), (b'NV', b'NV'), (b'NH', b'NH'), (b'NJ', b'NJ'), (b'NM', b'NM'), (b'NY', b'NY'), (b'NC', b'NC'), (b'ND', b'ND'), (b'OH', b'OH'), (b'OK', b'OK'), (b'OR', b'OR'), (b'MD', b'MD'), (b'MA', b'MA'), (b'MI', b'MI'), (b'MN', b'MN'), (b'MS', b'MS'), (b'MO', b'MO'), (b'PA', b'PA'), (b'RI', b'RI'), (b'SC', b'SC'), (b'SD', b'SD'), (b'TN', b'TN'), (b'TX', b'TX'), (b'UT', b'UT'), (b'VT', b'VT'), (b'VA', b'VA'), (b'WA', b'WA'), (b'WV', b'WV'), (b'WI', b'WI'), (b'WY', b'WY')], default='', max_length=5)),
                ('mentoring', models.BooleanField(default=False)),
                ('submitted', models.BooleanField(default=False)),
                ('score', models.FloatField(default=0)),
                ('reimbursement', models.FloatField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=60)),
                ('info', models.TextField(default='')),
                ('start', models.DateTimeField()),
                ('duration', models.DurationField()),
                ('category', models.IntegerField(choices=[(0, 'Logistics'), (1, 'Social'), (2, 'Food'), (3, 'Tech Talk'), (4, 'Other')])),
                ('approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=60)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PushToken',
            fields=[
                ('token', models.CharField(db_index=True, max_length=100, primary_key=True, serialize=False, unique=True)),
                ('is_apns', models.BooleanField()),
                ('preferences', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MHacksUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'default_permissions': (),
                'verbose_name': 'User',
            },
            managers=[
                ('objects', users.MHacksUserManager()),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='locations',
            field=models.ManyToManyField(to='MHacks.Location'),
        ),
        migrations.AddField(
            model_name='application',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
